{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,C,S,E,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAe,SAAS,aAAa,CAAC,SACxC,EAAkB,KAClB,EAAc,CAAA,EAElB,EAAM,gBAAgB,CAAC,QAAS,SAAS,CAAC,EACxC,IAAM,EAAS,EAAE,MAAM,CAAC,OAAO,CAAC,MAEhC,GAAK,GAIL,IAcgB,EAAW,EAAP,EACd,EAfA,EAAY,EAAO,SAAS,AAE9B,CAAA,IAAc,EAChB,EAAc,CAAC,GAEf,EAAc,CAAA,EACd,EAAkB,GAGpB,IAAM,GAKU,EALY,EAAa,QAAQ,CAKtB,EALwB,EAK/B,EAAJ,A,C,A,C,S,C,E,G,M,O,C,G,O,C,C,EAAA,I,EAAA,I,EAAA,I,A,W,M,A,U,6I,G,EAAA,KAAA,CAAC,GACX,EAAW,AAAU,IAAV,EAEjB,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,CAChC,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,CAEtC,GAAI,EAAU,CACZ,IAAM,EAAY,SAAC,CAAnB,EAA4B,OAAA,EAAK,KAAK,CAAC,GAAG,OAAO,CAAC,IAAK,G,SAEvD,AAAI,EACK,EAAU,GAAS,EAAU,GAE7B,EAAU,GAAS,EAAU,EAExC,QAEA,AAAI,EACK,EAAM,aAAa,CAAC,GAEpB,EAAM,aAAa,CAAC,EAE/B,GAEO,GA3BP,AAAA,EAAa,MAAM,CAAnB,KAAA,CAAA,E,A,S,C,E,G,M,O,C,G,O,E,E,EAAuB,I,EAAA,I,EAAA,I,A,W,M,A,U,wI,KACzB,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_array(arr) {\n    return _array_with_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tableContent = document.querySelector(\"tbody\");\nvar lastSortedIndex = null;\nvar isAscending = true;\ntable.addEventListener(\"click\", function(e) {\n    var _tableContent;\n    var header = e.target.closest(\"th\");\n    if (!header) return;\n    var cellIndex = header.cellIndex;\n    if (cellIndex === lastSortedIndex) isAscending = !isAscending;\n    else {\n        isAscending = true;\n        lastSortedIndex = cellIndex;\n    }\n    var sortedRows = sortRows(tableContent.children, cellIndex);\n    (_tableContent = tableContent).append.apply(_tableContent, _to_consumable_array(sortedRows));\n});\nfunction sortRows(param, index) {\n    var _param = _to_array(param), rows = _param.slice(0);\n    var bySalary = index === 3;\n    rows.sort(function(a, b) {\n        var dataA = a.cells[index].innerText;\n        var dataB = b.cells[index].innerText;\n        if (bySalary) {\n            var normalize = function(data) {\n                return data.slice(1).replace(\",\", \"\");\n            };\n            if (isAscending) return normalize(dataA) - normalize(dataB);\n            else return normalize(dataB) - normalize(dataA);\n        }\n        if (isAscending) return dataA.localeCompare(dataB);\n        else return dataB.localeCompare(dataA);\n    });\n    return rows;\n}\n\n//# sourceMappingURL=index.95c2abc2.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tableContent = document.querySelector('tbody');\nlet lastSortedIndex = null;\nlet isAscending = true;\n\ntable.addEventListener('click', function(e) {\n  const header = e.target.closest('th');\n\n  if (!header) {\n    return;\n  }\n\n  const cellIndex = header.cellIndex;\n\n  if (cellIndex === lastSortedIndex) {\n    isAscending = !isAscending;\n  } else {\n    isAscending = true;\n    lastSortedIndex = cellIndex;\n  }\n\n  const sortedRows = sortRows(tableContent.children, cellIndex);\n\n  tableContent.append(...sortedRows);\n});\n\nfunction sortRows([...rows], index) {\n  const bySalary = index === 3;\n\n  rows.sort((a, b) => {\n    const dataA = a.cells[index].innerText;\n    const dataB = b.cells[index].innerText;\n\n    if (bySalary) {\n      const normalize = (data) => data.slice(1).replace(',', '');\n\n      if (isAscending) {\n        return normalize(dataA) - normalize(dataB);\n      } else {\n        return normalize(dataB) - normalize(dataA);\n      }\n    }\n\n    if (isAscending) {\n      return dataA.localeCompare(dataB);\n    } else {\n      return dataB.localeCompare(dataA);\n    }\n  });\n\n  return rows;\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","table","document","querySelector","tableContent","lastSortedIndex","isAscending","addEventListener","e","header","target","closest","param","index","rows","bySalary","cellIndex","sortedRows","children","_param","_array_with_holes","isArray","_non_iterable_rest","TypeError","sort","a","b","dataA","cells","innerText","dataB","normalize","data","replace","localeCompare","append","apply","_array_without_holes","_non_iterable_spread"],"version":3,"file":"index.95c2abc2.js.map"}